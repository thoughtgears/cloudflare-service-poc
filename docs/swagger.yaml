basePath: /
definitions:
  handlers.CreateUserRequest:
    properties:
      address:
        description: Address is the user's physical address. (Required)
        type: string
      email:
        description: Email is the user's unique email address. (Required, must be
          valid email format)
        type: string
      first_name:
        description: FirstName is the user's given name. (Required)
        minLength: 1
        type: string
      last_name:
        description: LastName is the user's family name or surname. (Required)
        minLength: 1
        type: string
      phone:
        description: Phone is the user's primary phone number. (Required)
        type: string
      preferences:
        allOf:
        - $ref: '#/definitions/models.Preferences'
        description: Preferences contains the user's notification settings (Email/SMS).
    required:
    - address
    - email
    - first_name
    - last_name
    - phone
    type: object
  handlers.UpdateUserRequest:
    properties:
      active:
        description: Active indicates whether the user's account should be active.
        type: boolean
      address:
        description: Address is the user's physical address. (Required)
        type: string
      email:
        description: Email is the user's unique email address. (Required, must be
          valid email format)
        type: string
      first_name:
        description: FirstName is the user's given name. (Required)
        minLength: 1
        type: string
      last_name:
        description: LastName is the user's family name or surname. (Required)
        minLength: 1
        type: string
      phone:
        description: Phone is the user's primary phone number. (Required)
        type: string
      preferences:
        allOf:
        - $ref: '#/definitions/models.Preferences'
        description: Preferences contains the user's notification settings (Email/SMS).
    required:
    - address
    - email
    - first_name
    - last_name
    - phone
    type: object
  models.Preferences:
    properties:
      email:
        description: Email indicates if the user wants email notifications (true =
          yes, false = no).
        type: boolean
      sms:
        description: SMS indicates if the user wants SMS text message notifications
          (true = yes, false = no).
        type: boolean
    type: object
  models.User:
    properties:
      active:
        description: Active indicates whether the user's account is currently active
          (true) or inactive (false).
        type: boolean
      address:
        description: |-
          Address is the user's physical address (currently stored as a single string).
          Consider using a structured Address type for more detail if needed in the future.
        type: string
      created_at:
        description: CreatedAt records the exact date and time when the user record
          was created in the system.
        type: string
      email:
        description: Email is the user's unique email address, used for login and
          communication.
        type: string
      first_name:
        description: FirstName is the user's given name.
        type: string
      id:
        description: ID is the unique identifier for the user, typically a UUID.
        type: string
      last_name:
        description: LastName is the user's family name or surname.
        type: string
      phone:
        description: Phone is the user's primary phone number.
        type: string
      preferences:
        allOf:
        - $ref: '#/definitions/models.Preferences'
        description: Preferences embeds the notification settings for the user.
      updated_at:
        description: UpdatedAt records the exact date and time when the user record
          was last modified.
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: This is a sample server for managing users.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: User Service
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: get all users currently stored
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved list of users
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: add a new user to the store based on JSON payload
      parameters:
      - description: User data to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created user
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Validation Error or Invalid Request Format
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: remove user from the store by ID string from path parameter
      parameters:
      - description: User ID (UUID)
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Successfully deleted user (No Content)
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user by ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: get user by ID string from path parameter
      parameters:
      - description: User ID (UUID)
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a single user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: update user data for the given ID based on JSON payload (PUT semantics)
      parameters:
      - description: User ID (UUID)
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: User data to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated user
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Validation Error or Invalid Request Format
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an existing user
      tags:
      - users
schemes:
- https
swagger: "2.0"
